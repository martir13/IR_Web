body { background-color: #fff; color: #000; font-size: 100%; font-family: Georgia,Palatino,Times,serif;}


#header, #header_extender, #globalnav, logo-homelink, #topNav, #task-links, #nav, #nonfooter, #did-you-know { display: none; }
div#nav *, div#u-nav * { display: none; }

#globalnav, #globalnav *, logo-homelink, #topNav, #task-links, #erau-search { display: none; }


/* CONTENT SECTION Contains contentMain and #nav.  */
#content { position: relative; text-align: left;}  

/*ContentMain contains page_copy and columns.*/
#contentMain { display: block; width: 100%; }
#page_copy { width: 100%;  }

div#logoprint { display: block; position: relative; width: 400px;  text-align: left; overflow: hidden;  }

div#logoprint img { width: 50%; }




/*FOOTER Footer is outside div#nonfooter. div#nonfooter is 100% of window with padding on bottom which provides space for footer. Footer is brought into view by the negative top margin.*/
#footer { position: relative; width: 100%;}


.clear { clear: both; } 


/*BASIC FLOATS*/
.floatright {float: right; margin: 10pt  0 10pt 10pt;}
.floatleft { float: left; margin: 10pt  10pt 10pt 0; }




  
/* Headings
-------------------------------------------------------------- */
h1,h2,h3,h4,h5,h6 { 
  color: #000; 
  font-family: "Times New Roman", serif;
  font-weight: bold; line-height: 1.1;}

h1 { font-size: 22pt; margin: 16pt 0 .4em 0;} 
h2 { font-size: 16pt;  margin: 16pt 0 .4em 0; }
h3 { font-size: 14pt;   margin:  16pt 0  3pt 0pt; }
h4 { font-size: 12pt;   margin:  16pt 0 3pt 0; }
h5 { font-size: 12pt;   margin:  16pt 0 3pt 0; }
h6 { font-size: 12pt;    margin:  16pt 0 3pt 0; }


/* HEADING RELATED */
h1 span { font-size: 11.5pt; color: #000; }

/*h1.kicker and h1.deck is for extra copy associated with h1 but not a subheading introducing a new section.
p.h1-kicker { margin: 0 0 4pt -16pt; font-weight: bold; font-size: .8em; }
p.h1-deck { margin: 3pt 0 18pt -16pt; font-weight: bold; font-size: .9em; }*/

	
/* TEXT */
p { font-size: 11pt; line-height: 16pt; margin: 0 0 12pt 0;}

/* LINKS */
a { font-weight: normal; text-decoration: none; border-bottom: 1pt solid #ccc; }
a:link { color:  #006; background-color: transparent; }
a:visited { color: #006; background-color: transparent; }
a:active { color: #006; background-color: transparent;  border-bottom: 1pt solid #006; }
a:hover	{ color: #006; background-color: transparent; border-bottom: 1pt solid #006;}

a.pdf {  display: none; }

/* END LINKS */
	



/* LISTS */


ul, ol { margin-left: 20pt;}
li, dd, dt {  font-size: 11pt; line-height: 14pt; }


dt {margin-top: 10pt; font-weight: bold;}
dd {margin: 0 0 8pt 20pt;  font-weight: normal;}

ol { list-style-type: decimal }

dd ol { font-size: 11pt; }
dl {margin-bottom: 16pt }


ul.linklist { margin: 0; padding: 0; list-style-type: none; list-style: none; }
ul.linklist li { list-style-type: none; list-style: none; margin-top: 2pt; list-style-image: none; }
ul.linklist a { list-style-type: none; list-style: none; border: 0;}
ul.linklist a:hover { border-bottom: 1pt solid #999;}
ul.linklist p { padding: 2pt;}




blockquote {  border-left:10pt solid #ddd; margin-left:10pt; }
pre { font-family: monospace; font-size: .875em; }
strong { font-weight: bold; }
em { font-style:italic; }





/* FOOTER */
#footer { position: relative; text-align: center; display: inline; } 


#bottomLinks {  display: none;  }

#footer p {  font: normal 8pt/12pt Arial, Helvetica, sans-serif; margin: 0; padding:0; }
#footer p.copyright {  margin-top: 20pt;}
#footer p.campus { font-weight: bold;}
#footer p.address { font: normal 8pt/1.2 Arial, Helvetica, sans-serif; }


	
/* MISC */
	
hr { display: none; }
div.hr { height: 1pt; margin: 1.5em 10pt; border-bottom: 1pt dotted black; }

address { font-style: italic; font-size: 12pt; line-height: 1.2 }

/*
acronym { }

abbr { }
*/
pre {
padding: 12pt; background: #fff; border: 1pt solid #ccc;
color:blue;
font: normal 1em/.9 "Lucida Console","Courier New",Courier,monospace;
font-size-adjust:none;
font-style:normal;
font-variant:normal;}

pre span { display: block; color: red; margin: 12pt 0 2pt 0;}

div#nav, div#nav li, div#nav li a { display: none; }

table { width: 90%; margin-top: 20pt;  }
table caption { margin: 12pt 0 4pt 0; text-align: left; font-weight: bold; }
table.items-costs td+td, table.items-costs th+th  { text-align: right; }
table.items-costs { margin-left: 20pt}
table col.cost { width: 130pt; text-align: right; }
table th { background: #5a5a5a; color: #000; border-top: 1pt solid #000;  border-bottom: 1pt solid #000;  }
table tr { }
table td { border-bottom: 1pt solid #555; padding: 2pt;}







/* SpryTabbedPanels.css - version 0.4 - Spry Pre-Release 1.6 */

/* Copyright (c) 2006. Adobe Systems Incorporated. All rights reserved. */

/* Horizontal Tabbed Panels
 *
 * The default style for a TabbedPanels widget places all tab buttons
 * (left aligned) above the content panel.
 */

/* This is the selector for the main TabbedPanels container. For our
 * default style, this container does not contribute anything visually,
 * but it is floated left to make sure that any floating or clearing done
 * with any of its child elements are contained completely within the
 * TabbedPanels container, to minimize any impact or undesireable
 * interaction with other floated elements on the page that may be used
 * for layout.
 *
 * If you want to constrain the width of the TabbedPanels widget, set a
 * width on the TabbedPanels container. By default, the TabbedPanels widget
 * expands horizontally to fill up available space.
 *
 * The name of the class ("TabbedPanels") used in this selector is not
 * necessary to make the widget function. You can use any class name you
 * want to style the TabbedPanels container.
 */
.TabbedPanels {
	margin: 0;
	padding: 0;
	clear: none;
	width: 100%; /* IE Hack to force proper layout when preceded by a paragraph. (hasLayout Bug)*/
}


/* This is the selector for the TabGroup. The TabGroup container houses
 * all of the tab buttons for each tabbed panel in the widget. This container
 * does not contribute anything visually to the look of the widget for our
 * default style.
 *
 * The name of the class ("TabbedPanelsTabGroup") used in this selector is not
 * necessary to make the widget function. You can use any class name you
 * want to style the TabGroup container.
 */
.TabbedPanelsTabGroup { display: none; }
	/*margin:  -12pt 0 0 0;
	padding: 0 0 0 0;
	list-style-type: none;
	list-style-image: none;
	border-left: solid 1pt #6f91d0;
	height: auto;
	border-top: solid 10pt #fff;*/
}

/* This is the selector for the TabbedPanelsTab. This container houses
 * the title for the panel. This is also the tab "button" that the user clicks
 * on to activate the corresponding content panel so that it appears on top
 * of the other tabbed panels contained in the widget.
 *
 * For our default style, each tab is positioned relatively 1 pixel down from
 * where it wold normally render. This allows each tab to overlap the content
 * panel that renders below it. Each tab is rendered with a 1 pixel bottom
 * border that has a color that matches the top border of the current content
 * panel. This gives the appearance that the tab is being drawn behind the
 * content panel.
 *
 * The name of the class ("TabbedPanelsTab") used in this selector is not
 * necessary to make the widget function. You can use any class name you want
 * to style this tab container.
 */
.TabbedPanelsTab {
	display: block;/*position: relative;
	top: 1pt;
	float: right;*/
	padding: 4pt 10pt;
	/*height: 15pt;*/
	margin: 0pt 0pt 0pt 0pt;
	font: bold .8125em/1 sans-serif;
	/*background-color: #DDD;*/
	list-style: none;
	list-style-type: none;
	list-style-image: none;
	border: solid 1pt #6f91d0;
	border-width: 1pt 0 1pt 0;
	-moz-user-select: none;
	-khtml-user-select: none;
	cursor: pointer;
}

/* This selector is an example of how to change the appearnce of a tab button
 * container as the mouse enters it. The class "TabbedPanelsTabHover" is
 * programatically added and removed from the tab element as the mouse enters
 * and exits the container.
 */
.TabbedPanelsTabHover {
	background-color: #CCC;
}

/* This selector is an example of how to change the appearance of a tab button
 * container after the user has clicked on it to activate a content panel.
 * The class "TabbedPanelsTabSelected" is programatically added and removed
 * from the tab element as the user clicks on the tab button containers in
 * the widget.
 *
 * As mentioned above, for our default style, tab buttons are positioned
 * 1 pixel down from where it would normally render. When the tab button is
 * selected, we change its bottom border to match the background color of the
 * content panel so that it looks like the tab is part of the content panel.
 */
.TabbedPanelsTabSelected {
	/*background:  url(/assets/css/iface/gold_horz.gif) top left; repeat: no-repeat ;*/
	/*border-bottom: 1pt solid #6f91d0;*/
}

/* This selector is an example of how to make a link inside of a tab button
 * look like normal text. Users may want to use links inside of a tab button
 * so that when it gets focus, the text *inside* the tab button gets a focus
 * ring around it, instead of the focus ring around the entire tab.
 */
.TabbedPanelsTab a {
	color: black;
	text-decoration: none;
}

/* This is the selector for the ContentGroup. The ContentGroup container houses
 * all of the content panels for each tabbed panel in the widget. For our
 * default style, this container provides the background color and borders that
 * surround the content.
 *
 * The name of the class ("TabbedPanelsContentGroup") used in this selector is
 * not necessary to make the widget function. You can use any class name you
 * want to style the ContentGroup container.
 */
.TabbedPanelsContentGroup { 
	clear: both;
/*
	border-left: solid 1pt #CCC;
	border-bottom: solid 1pt #CCC;
	border-top: solid 1pt #999;
	border-right: solid 1pt #999;
	background-color: #EEE;
*/}

/* This is the selector for the Content panel. The Content panel holds the
 * content for a single tabbed panel. For our default style, this container
 * provides some padding, so that the content is not pushed up against the
 * widget borders.
 *
 * The name of the class ("TabbedPanelsContent") used in this selector is
 * not necessary to make the widget function. You can use any class name you
 * want to style the Content container.
 */
.TabbedPanelsContent {
	padding: 0;
}

/* This selector is an example of how to change the appearnce of the currently
 * active container panel. The class "TabbedPanelsContentVisible" is
 * programatically added and removed from the content element as the panel
 * is activated/deactivated.
 */
.TabbedPanelsContentVisible {
}

/* Vertical Tabbed Panels
 *
 * The following rules override some of the default rules above so that the
 * TabbedPanels widget renders with its tab buttons along the left side of
 * the currently active content panel.
 *
 * With the rules defined below, the only change that will have to be made
 * to switch a horizontal tabbed panels widget to a vertical tabbed panels
 * widget, is to use the "VTabbedPanels" class on the top-level widget
 * container element, instead of "TabbedPanels".
 */

/* This selector floats the TabGroup so that the tab buttons it contains
 * render to the left of the active content panel. A border is drawn around
 * the group container to make it look like a list container.
 */
.VTabbedPanels .TabbedPanelsTabGroup {
	float: right;
	width: 160pt;
	/*height: 20em;
	background-color: yellow;*/
	position: relative;
    
	/*	border-right: solid 1pt #999;
	border-left: solid 1pt #CCC;
	border-bottom: solid 1pt #CCC;*/
	
	}
	

/* This selector disables the float property that is placed on each tab button
 * by the default TabbedPanelsTab selector rule above. It also draws a bottom
 * border for the tab. The tab button will get its left and right border from
 * the TabGroup, and its top border from the TabGroup or tab button above it.
 */
.VTabbedPanels .TabbedPanelsTab {
	float: none;
	margin: 0pt;
	border-top: none;
	border-left: none;
	border-right: none;
}

/* This selector disables the float property that is placed on each tab button
 * by the default TabbedPanelsTab selector rule above. It also draws a bottom
 * border for the tab. The tab button will get its left and right border from
 * the TabGroup, and its top border from the TabGroup or tab button above it.
 */
.VTabbedPanels .TabbedPanelsTabSelected {
	background-color: #fff;
/*
	border-bottom: solid 1pt #000;
	border-top: solid 1pt #000;
*/}

/* This selector floats the content panels for the widget so that they
 * render to the right of the tabbed buttons.
 */
.VTabbedPanels .TabbedPanelsContentGroup {
	display: inline; 
	overflow: visible;
	clear: none;
	float: left;
	padding: 0pt;
	width: 470pt;
	height: auto; 
}

.TabbedPanelsContentGroup
{ margin-left: 2pt }



.VTabbedPanels { 
margin: -9pt 0 0 32pt;
border-top: 0;
padding-top: 12pt;
 }





